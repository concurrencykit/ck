.\"
.\" Copyright 2013 Samy Al Bahra.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"
.Dd April 7, 2013
.Dt ck_pr_fas 3
.Sh NAME
.Nm ck_pr_fas_ptr ,
.Nm ck_pr_fas_double ,
.Nm ck_pr_fas_char ,
.Nm ck_pr_fas_uint ,
.Nm ck_pr_fas_int ,
.Nm ck_pr_fas_64 ,
.Nm ck_pr_fas_32 ,
.Nm ck_pr_fas_16 ,
.Nm ck_pr_fas_8
.Nd atomic swap operations
.Sh LIBRARY
Concurrency Kit (libck, \-lck)
.Sh SYNOPSIS
.In ck_pr.h
.Ft void *
.Fn ck_pr_fas_ptr "void *target" "void *new_value"
.Ft double
.Fn ck_pr_fas_double "double *target" "double new_value"
.Ft char
.Fn ck_pr_fas_char "char *target" "char new_value"
.Ft unsigned int
.Fn ck_pr_fas_uint "unsigned int *target" "unsigned int new_value"
.Ft int
.Fn ck_pr_fas_int "int *target" "int new_value"
.Ft uint64_t
.Fn ck_pr_fas_64 "uint64_t *target" "uint64_t new_value"
.Ft uint32_t
.Fn ck_pr_fas_32 "uint32_t *target" "uint32_t new_value"
.Ft uint16_t
.Fn ck_pr_fas_16 "uint16_t *target" "uint16_t new_value"
.Ft uint8_t
.Fn ck_pr_fas_8 "uint8_t *target" "uint8_t new_value"
.Sh DESCRIPTION
The
.Fn ck_pr_fas 3
family of functions atomically fetch the value pointed to
by
.Fa target
and replace the value pointed to by
.Fa target
with the value specified by
.Fa new_value .
.Sh RETURN VALUES
This function returns the value pointed to by
.Fa target
at the time of operation invocation before it was
atomically replaced with
.Fa new_value .
.Sh SEE ALSO
.Xr ck_pr_fence_load 3 ,
.Xr ck_pr_fence_load_depends 3 ,
.Xr ck_pr_fence_store 3 ,
.Xr ck_pr_fence_memory 3 ,
.Xr ck_pr_load 3 ,
.Xr ck_pr_store 3 ,
.Xr ck_pr_faa 3 ,
.Xr ck_pr_inc 3 ,
.Xr ck_pr_dec 3 ,
.Xr ck_pr_neg 3 ,
.Xr ck_pr_not 3 ,
.Xr ck_pr_add 3 ,
.Xr ck_pr_sub 3 ,
.Xr ck_pr_and 3 ,
.Xr ck_pr_or 3 ,
.Xr ck_pr_xor 3 ,
.Xr ck_pr_cas 3 ,
.Xr ck_pr_btc 3 ,
.Xr ck_pr_bts 3 ,
.Xr ck_pr_btr 3
.Pp
Additional information available at http://concurrencykit.org/
